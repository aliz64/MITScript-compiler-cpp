function
{
	functions =
	[
		function
		{
			functions =
			[
				function
				{
					functions =
					[
						function
						{
							functions = [],
							constants = [None, 1],
							parameter_count = 0,
							local_vars = [count],
							local_ref_vars = [],
							free_vars = [this],
							names = [left, len, right],
							instructions = 
							[
								load_const	1
								store_local	0
								push_ref	0
								load_ref
								field_load	0
								load_const	0
								eq
								not
								if	2
								goto	10
								load_local	0
								push_ref	0
								load_ref
								field_load	0
								field_load	1
								call	0
								add
								store_local	0
								goto	1
								push_ref	0
								load_ref
								field_load	2
								load_const	0
								eq
								not
								if	2
								goto	10
								load_local	0
								push_ref	0
								load_ref
								field_load	2
								field_load	1
								call	0
								add
								store_local	0
								goto	1
								load_local	0
								return
							]
						},
						function
						{
							functions = [],
							constants = [None, true, false],
							parameter_count = 1,
							local_vars = [x],
							local_ref_vars = [],
							free_vars = [this],
							names = [val, left, contains, right],
							instructions = 
							[
								load_local	0
								push_ref	0
								load_ref
								field_load	0
								eq
								if	2
								goto	4
								load_const	1
								return
								goto	1
								load_local	0
								push_ref	0
								load_ref
								field_load	0
								swap
								gt
								if	2
								goto	19
								push_ref	0
								load_ref
								field_load	1
								load_const	0
								eq
								if	2
								goto	4
								load_const	2
								return
								goto	8
								push_ref	0
								load_ref
								field_load	1
								field_load	2
								load_local	0
								call	1
								return
								goto	18
								push_ref	0
								load_ref
								field_load	3
								load_const	0
								eq
								if	2
								goto	4
								load_const	2
								return
								goto	8
								push_ref	0
								load_ref
								field_load	3
								field_load	2
								load_local	0
								call	1
								return
								load_const	0
								return
							]
						},
						function
						{
							functions = [],
							constants = [None],
							parameter_count = 1,
							local_vars = [x],
							local_ref_vars = [],
							free_vars = [this, Node],
							names = [val, left, add, right],
							instructions = 
							[
								load_local	0
								push_ref	0
								load_ref
								field_load	0
								swap
								gt
								if	2
								goto	24
								push_ref	0
								load_ref
								field_load	1
								load_const	0
								eq
								if	2
								goto	9
								push_ref	0
								load_ref
								push_ref	1
								load_ref
								load_local	0
								call	1
								field_store	1
								goto	8
								push_ref	0
								load_ref
								field_load	1
								field_load	2
								load_local	0
								call	1
								pop
								goto	31
								load_local	0
								push_ref	0
								load_ref
								field_load	0
								gt
								if	2
								goto	24
								push_ref	0
								load_ref
								field_load	3
								load_const	0
								eq
								if	2
								goto	9
								push_ref	0
								load_ref
								push_ref	1
								load_ref
								load_local	0
								call	1
								field_store	3
								goto	8
								push_ref	0
								load_ref
								field_load	3
								field_load	2
								load_local	0
								call	1
								pop
								goto	1
								load_const	0
								return
							]
						},
						function
						{
							functions = [],
							constants = [None],
							parameter_count = 0,
							local_vars = [],
							local_ref_vars = [],
							free_vars = [this],
							names = [left, val, min],
							instructions = 
							[
								push_ref	0
								load_ref
								field_load	0
								load_const	0
								eq
								if	2
								goto	6
								push_ref	0
								load_ref
								field_load	1
								return
								goto	7
								push_ref	0
								load_ref
								field_load	0
								field_load	2
								call	0
								return
								load_const	0
								return
							]
						},
						function
						{
							functions = [],
							constants = [None],
							parameter_count = 0,
							local_vars = [],
							local_ref_vars = [],
							free_vars = [this],
							names = [right, val, max],
							instructions = 
							[
								push_ref	0
								load_ref
								field_load	0
								load_const	0
								eq
								if	2
								goto	6
								push_ref	0
								load_ref
								field_load	1
								return
								goto	7
								push_ref	0
								load_ref
								field_load	0
								field_load	2
								call	0
								return
								load_const	0
								return
							]
						},
						function
						{
							functions = [],
							constants = [None],
							parameter_count = 1,
							local_vars = [f],
							local_ref_vars = [],
							free_vars = [this],
							names = [left, forall, val, right],
							instructions = 
							[
								push_ref	0
								load_ref
								field_load	0
								load_const	0
								eq
								not
								if	2
								goto	9
								push_ref	0
								load_ref
								field_load	0
								field_load	1
								load_local	0
								call	1
								pop
								goto	1
								load_local	0
								push_ref	0
								load_ref
								field_load	2
								call	1
								pop
								push_ref	0
								load_ref
								field_load	3
								load_const	0
								eq
								not
								if	2
								goto	9
								push_ref	0
								load_ref
								field_load	3
								field_load	1
								load_local	0
								call	1
								pop
								goto	1
								load_const	0
								return
							]
						}
					],
					constants = [None],
					parameter_count = 1,
					local_vars = [v, this],
					local_ref_vars = [this],
					free_vars = [Node],
					names = [val, left, right, len, contains, add, min, max, forall],
					instructions = 
					[
						alloc_record
						dup
						load_local	0
						field_store	0
						dup
						load_const	0
						field_store	1
						dup
						load_const	0
						field_store	2
						dup
						load_func	0
						push_ref	0
						alloc_closure	1
						field_store	3
						dup
						load_func	1
						push_ref	0
						alloc_closure	1
						field_store	4
						dup
						load_func	2
						push_ref	0
						push_ref	1
						alloc_closure	2
						field_store	5
						dup
						load_func	3
						push_ref	0
						alloc_closure	1
						field_store	6
						dup
						load_func	4
						push_ref	0
						alloc_closure	1
						field_store	7
						dup
						load_func	5
						push_ref	0
						alloc_closure	1
						field_store	8
						store_local	1
						load_local	1
						return
					]
				},
				function
				{
					functions = [],
					constants = [None, false],
					parameter_count = 1,
					local_vars = [x],
					local_ref_vars = [],
					free_vars = [this],
					names = [root, contains],
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						load_const	0
						eq
						if	2
						goto	4
						load_const	1
						return
						goto	8
						push_ref	0
						load_ref
						field_load	0
						field_load	1
						load_local	0
						call	1
						return
						load_const	0
						return
					]
				},
				function
				{
					functions = [],
					constants = [None],
					parameter_count = 1,
					local_vars = [x],
					local_ref_vars = [],
					free_vars = [this, Node],
					names = [root, add],
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						load_const	0
						eq
						if	2
						goto	9
						push_ref	0
						load_ref
						push_ref	1
						load_ref
						load_local	0
						call	1
						field_store	0
						goto	8
						push_ref	0
						load_ref
						field_load	0
						field_load	1
						load_local	0
						call	1
						pop
						load_const	0
						return
					]
				},
				function
				{
					functions = [],
					constants = [None, "Error"],
					parameter_count = 0,
					local_vars = [],
					local_ref_vars = [],
					free_vars = [this],
					names = [root, min],
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						load_const	0
						eq
						if	2
						goto	4
						load_const	1
						return
						goto	7
						push_ref	0
						load_ref
						field_load	0
						field_load	1
						call	0
						return
						load_const	0
						return
					]
				},
				function
				{
					functions = [],
					constants = [None, "Error"],
					parameter_count = 0,
					local_vars = [],
					local_ref_vars = [],
					free_vars = [this],
					names = [root, max],
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						load_const	0
						eq
						if	2
						goto	4
						load_const	1
						return
						goto	7
						push_ref	0
						load_ref
						field_load	0
						field_load	1
						call	0
						return
						load_const	0
						return
					]
				},
				function
				{
					functions = [],
					constants = [None, 0],
					parameter_count = 0,
					local_vars = [],
					local_ref_vars = [],
					free_vars = [this],
					names = [root, len],
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						load_const	0
						eq
						if	2
						goto	4
						load_const	1
						return
						goto	7
						push_ref	0
						load_ref
						field_load	0
						field_load	1
						call	0
						return
						load_const	0
						return
					]
				},
				function
				{
					functions = [],
					constants = [None],
					parameter_count = 1,
					local_vars = [f],
					local_ref_vars = [],
					free_vars = [this],
					names = [root, forall],
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						load_const	0
						eq
						if	2
						goto	2
						goto	8
						push_ref	0
						load_ref
						field_load	0
						field_load	1
						load_local	0
						call	1
						pop
						load_const	0
						return
					]
				}
			],
			constants = [None],
			parameter_count = 0,
			local_vars = [Node, this],
			local_ref_vars = [Node, this],
			free_vars = [],
			names = [root, contains, add, min, max, len, forall],
			instructions = 
			[
				load_func	0
				push_ref	0
				alloc_closure	1
				store_local	0
				alloc_record
				dup
				load_const	0
				field_store	0
				dup
				load_func	1
				push_ref	1
				alloc_closure	1
				field_store	1
				dup
				load_func	2
				push_ref	1
				push_ref	0
				alloc_closure	2
				field_store	2
				dup
				load_func	3
				push_ref	1
				alloc_closure	1
				field_store	3
				dup
				load_func	4
				push_ref	1
				alloc_closure	1
				field_store	4
				dup
				load_func	5
				push_ref	1
				alloc_closure	1
				field_store	5
				dup
				load_func	6
				push_ref	1
				alloc_closure	1
				field_store	6
				store_local	1
				load_local	1
				return
			]
		}
	],
	constants = [None, 400, "5", 0, "6", 1, "Min = ", "Max = ", "Range size = ", "Missing = ", "Length = ", "After forall"],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [print, intcast, input, Tree, M, N, t, i, j, inval, min, max, missing, add, min, max, contains, len],
	instructions = 
	[
		load_func	0
		alloc_closure	0
		store_global	0
		load_func	1
		alloc_closure	0
		store_global	1
		load_func	2
		alloc_closure	0
		store_global	2
		load_func	3
		alloc_closure	0
		store_global	3
		load_const	1
		store_global	4
		load_global	1
		load_const	2
		call	1
		store_global	5
		load_global	3
		call	0
		store_global	6
		load_const	3
		store_global	7
		load_global	7
		load_global	5
		swap
		gt
		if	2
		goto	30
		load_const	3
		store_global	8
		load_global	1
		load_const	4
		call	1
		store_global	9
		load_global	8
		load_global	4
		swap
		gt
		if	2
		goto	13
		load_global	6
		field_load	13
		load_global	9
		load_global	8
		add
		call	1
		pop
		load_global	8
		load_const	5
		add
		store_global	8
		goto	-17
		load_global	7
		load_const	5
		add
		store_global	7
		goto	-34
		load_global	6
		field_load	14
		call	0
		store_global	10
		load_global	6
		field_load	15
		call	0
		store_global	11
		load_global	0
		load_const	6
		load_global	10
		add
		call	1
		pop
		load_global	0
		load_const	7
		load_global	11
		add
		call	1
		pop
		load_global	10
		store_global	7
		load_const	3
		store_global	12
		load_global	7
		load_global	11
		swap
		geq
		if	2
		goto	18
		load_global	6
		field_load	16
		load_global	7
		call	1
		not
		if	2
		goto	6
		load_global	12
		load_const	5
		add
		store_global	12
		goto	1
		load_global	7
		load_const	5
		add
		store_global	7
		goto	-22
		load_global	0
		load_const	8
		load_global	11
		load_global	10
		sub
		load_const	5
		add
		add
		call	1
		pop
		load_global	0
		load_const	9
		load_global	12
		add
		call	1
		pop
		load_global	0
		load_const	10
		load_global	6
		field_load	17
		call	0
		add
		call	1
		pop
		load_global	0
		load_const	11
		call	1
		pop
	]
}
